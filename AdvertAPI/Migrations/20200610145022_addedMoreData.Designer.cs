// <auto-generated />
using System;
using AdvertAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdvertAPI.Migrations
{
    [DbContext(typeof(CampaignDbContext))]
    [Migration("20200610145022_addedMoreData")]
    partial class addedMoreData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdvertAPI.Entities.Banner", b =>
                {
                    b.Property<int>("IdAdvertisement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("IdCampaign")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("IdAdvertisement");

                    b.HasIndex("IdCampaign");

                    b.ToTable("Banner");

                    b.HasData(
                        new
                        {
                            IdAdvertisement = 1,
                            Area = 1.2m,
                            IdCampaign = 1,
                            Name = "Coca-Cola",
                            Price = 2333m
                        },
                        new
                        {
                            IdAdvertisement = 2,
                            Area = 1.6m,
                            IdCampaign = 1,
                            Name = "Sprite",
                            Price = 1331m
                        },
                        new
                        {
                            IdAdvertisement = 3,
                            Area = 1m,
                            IdCampaign = 1,
                            Name = "Rollin",
                            Price = 413m
                        },
                        new
                        {
                            IdAdvertisement = 4,
                            Area = 2.1m,
                            IdCampaign = 2,
                            Name = "Donutik",
                            Price = 311m
                        },
                        new
                        {
                            IdAdvertisement = 5,
                            Area = 1.9m,
                            IdCampaign = 2,
                            Name = "McDonalds",
                            Price = 566m
                        });
                });

            modelBuilder.Entity("AdvertAPI.Entities.Building", b =>
                {
                    b.Property<int>("IdBuilding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("IdBuilding");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            IdBuilding = 1,
                            City = "Warsaw",
                            Height = 16.5m,
                            Street = "Krucza",
                            StreetNumber = 21
                        },
                        new
                        {
                            IdBuilding = 2,
                            City = "Warsaw",
                            Height = 10m,
                            Street = "Zlota",
                            StreetNumber = 51
                        },
                        new
                        {
                            IdBuilding = 3,
                            City = "Krakow",
                            Height = 7m,
                            Street = "Stara",
                            StreetNumber = 2
                        },
                        new
                        {
                            IdBuilding = 4,
                            City = "Poznan",
                            Height = 11m,
                            Street = "Lublinska",
                            StreetNumber = 3
                        },
                        new
                        {
                            IdBuilding = 5,
                            City = "Poznan",
                            Height = 12m,
                            Street = "Lublinska",
                            StreetNumber = 3
                        },
                        new
                        {
                            IdBuilding = 6,
                            City = "Poznan",
                            Height = 9m,
                            Street = "Lublinska",
                            StreetNumber = 3
                        });
                });

            modelBuilder.Entity("AdvertAPI.Entities.Campaign", b =>
                {
                    b.Property<int>("IdCampaign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromIdBuilding")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToIdBuilding")
                        .HasColumnType("int");

                    b.HasKey("IdCampaign");

                    b.HasIndex("FromIdBuilding");

                    b.HasIndex("IdClient");

                    b.HasIndex("ToIdBuilding");

                    b.ToTable("Campaign");

                    b.HasData(
                        new
                        {
                            IdCampaign = 1,
                            EndDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromIdBuilding = 1,
                            IdClient = 1,
                            PricePerSquareMeter = 3344m,
                            StartDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToIdBuilding = 3
                        },
                        new
                        {
                            IdCampaign = 2,
                            EndDate = new DateTime(2020, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromIdBuilding = 1,
                            IdClient = 2,
                            PricePerSquareMeter = 3344m,
                            StartDate = new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToIdBuilding = 3
                        },
                        new
                        {
                            IdCampaign = 3,
                            EndDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromIdBuilding = 4,
                            IdClient = 2,
                            PricePerSquareMeter = 3344m,
                            StartDate = new DateTime(2020, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToIdBuilding = 6
                        });
                });

            modelBuilder.Entity("AdvertAPI.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "badsa@gmail.com",
                            FirstName = "Bobby",
                            LastName = "Broody",
                            Login = "dafasf21",
                            Password = "dsa",
                            Phone = "+43131234",
                            RefreshToken = "asdfaafasfscsac-fsaf",
                            Salt = "dsadsa"
                        });
                });

            modelBuilder.Entity("AdvertAPI.Entities.Banner", b =>
                {
                    b.HasOne("AdvertAPI.Entities.Campaign", "Campaign")
                        .WithMany("Banners")
                        .HasForeignKey("IdCampaign")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertAPI.Entities.Campaign", b =>
                {
                    b.HasOne("AdvertAPI.Entities.Building", "FromBuilding")
                        .WithMany("FromCampaigns")
                        .HasForeignKey("FromIdBuilding")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AdvertAPI.Entities.Client", "Client")
                        .WithMany("Campaigns")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertAPI.Entities.Building", "ToBuilding")
                        .WithMany("ToCampaigns")
                        .HasForeignKey("ToIdBuilding")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
